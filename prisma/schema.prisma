generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int              @id @default(autoincrement())
  email       String           @unique
  password    String
  firstName   String
  lastName    String
  role        Role             @default(user)
  status      UserStatus       @default(inactive)
  createdAt   DateTime         @default(now()) @db.Timestamp(6)
  updatedAt   DateTime         @updatedAt
  deletedAt   DateTime?        @db.Timestamp(6)
  documents   Document[]
  collections UserCollection[]

  @@map("users")
}

model Document {
  id           Int        @id @default(autoincrement())
  title        String
  authorId     Int
  collectionId Int
  content      String
  plainContent String
  createdAt    DateTime   @default(now()) @db.Timestamp(6)
  updatedAt    DateTime   @updatedAt
  deletedAt    DateTime?  @db.Timestamp(6)
  author       User       @relation(fields: [authorId], references: [id])
  collection   Collection @relation(fields: [collectionId], references: [id])

  parentId Int?
  parent   Document?  @relation("DocumentLinks", fields: [parentId], references: [id])
  children Document[] @relation("DocumentLinks")

  @@map("documents")
}

model Collection {
  id          Int              @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime         @default(now()) @db.Timestamp(6)
  updatedAt   DateTime         @updatedAt
  deletedAt   DateTime?        @db.Timestamp(6)
  documents   Document[]
  users       UserCollection[]

  @@map("collections")
}

model UserCollection {
  userId       Int
  collectionId Int
  role         UserCollectionRole
  createdAt    DateTime           @default(now()) @db.Timestamp(6)
  user         User               @relation(fields: [userId], references: [id])
  collection   Collection         @relation(fields: [collectionId], references: [id])

  @@id([userId, collectionId])
  @@map("user_collections")
}

enum UserCollectionRole {
  owner
  editor
  viewer
}

enum Role {
  admin
  user
}

enum UserStatus {
  active
  inactive
}
