# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  role: Role!
  status: UserStatus!
  id: Float!
  email: String!
  firstName: String!
  lastName: String!
}

enum Role {
  admin
  user
}

enum UserStatus {
  active
  inactive
}

type TokensResponseModel {
  accessToken: String!
  refreshToken: String!
}

type SignInResponseModel {
  accessToken: String!
  refreshToken: String!
  user: User!
}

type Document {
  id: Float!
  title: String!
  content: String!
  author: User!
}

type Collection {
  id: Float!
  name: String!
  description: String!
  documents: [Document!]!
}

type Query {
  user: User!
  document(documentId: Float!): Document!
  collections: [Collection!]!
  collection(collectionId: Int!): Collection!
}

type Mutation {
  signUp(signUpInput: SignUpInput!): Void
  confirmEmail(hash: String!): SignInResponseModel!
  signIn(signInInput: SignInInput!): SignInResponseModel!
  refreshTokens: TokensResponseModel!
  resetPasswordRequest(email: String!): Void
  resetPassword(resetPasswordInput: ResetPasswordInput!): SignInResponseModel!
  signOut: Void
  createDocument(createDocumentInput: CreateDocumentInput!): Document!
  updateDocument(updateDocumentInput: UpdateDocumentInput!): Document!
  deleteDocument(deleteDocumentInput: DeleteDocumentInput!): Document!
}

"""Represents NULL values"""
scalar Void

input SignUpInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
}

input SignInInput {
  email: String!
  password: String!
}

input ResetPasswordInput {
  password: String!
  hash: String!
}

input CreateDocumentInput {
  title: String!
  content: String!
  collectionId: Float!
}

input UpdateDocumentInput {
  collectionId: Float!
  documentId: Float!
  content: String!
}

input DeleteDocumentInput {
  collectionId: Float!
  documentId: Float!
}

type Subscription {
  queryCollection(queryCollectionInput: QueryCollectionInput!): String!
}

input QueryCollectionInput {
  collectionId: Float!
  query: String!
}